name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - 'feature/*'
      - 'release/*'
      - 'hotfix/*'
      - 'customer/*'
    paths:
      - 'packages/server/**'
      - 'packages/sync-runner/**'
      - 'packages/action-runner/**'
  pull_request:
    branches:
      - main
      - develop
      - 'feature/*'
      - 'release/*'
      - 'hotfix/*'
      - 'customer/*'
    paths:
      - 'packages/server/**'
      - 'packages/sync-runner/**'
      - 'packages/action-runner/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [server, sync-runner, action-runner]
        include:
          - service: server
            path: packages/server
            image: embed-server
          - service: sync-runner
            path: packages/sync-runner
            image: embed-sync-runner
          - service: action-runner
            path: packages/action-runner
            image: embed-action-runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract branch name
        id: extract_branch
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Check if service changed
        id: check_changes
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^${{ matrix.path }}/"; then
            echo "SERVICE_CHANGED=true" >> $GITHUB_ENV
          else
            echo "SERVICE_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image for ${{ matrix.service }}
        if: env.SERVICE_CHANGED == 'true'
        uses: docker/build-push-action@v3
        with:
          context: ./${{ matrix.path }}
          file: ./${{ matrix.path }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.image }}:${{ env.BRANCH_NAME }}

      - name: Notify success
        if: success() && env.SERVICE_CHANGED == 'true'
        run: echo "Successfully built and pushed ${{ matrix.service }} for branch ${{ env.BRANCH_NAME }}"
